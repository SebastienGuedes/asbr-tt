<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>ASBR-TT - Agenda</title>
<style>
body {
  font-family: Arial, sans-serif;
  background: #f8f9fa;
  color: #2c3e50;
  margin: 0;
  padding: 20px;
}

/* Section hero */
.hero {
  text-align: center;
  margin-bottom: 30px;
}

.hero h2 {
  color: #c0392b;
}

/* Titre de journ√©e */
.day-title {
  font-size: 1.3rem;
  font-weight: bold;
  margin: 1.5rem 0 1rem;
  color: #c0392b;
  border-left: 4px solid #e74c3c;
  padding-left: 8px;
}

/* Grille et cartes */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

.card {
  background: white;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  text-align: center;
  transition: transform 0.2s, box-shadow 0.2s;
  display: flex;
  flex-direction: column;
}

.card:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.card h3 { 
  color: #c0392b; 
  margin-bottom: 10px; 
}

.event-time {
  font-weight: bold;
  margin-bottom: 5px;
  color: #e74c3c;
}

.event-location {
  font-size: 0.9em;
  color: #555;
  margin-top: auto;
}

/* Message de chargement */
#loading-message {
  text-align: center;
  margin: 2rem 0;
  color: #888;
  font-style: italic;
}

/* Responsive */
@media (max-width: 600px) {
  .grid { grid-template-columns: 1fr; }
}
</style>
</head>
<body>

<section class="hero" id="hero">
  <h2>üìÖ Prochain √©v√©nement sportif</h2>
  <p>Consultez directement les prochaines dates importantes du club.</p>
</section>

<!-- Message de chargement -->
<div id="loading-message">
  ‚è≥ Les √©v√©nements sont en cours de chargement‚Ä¶
</div>

<!-- Contenu dynamique -->
<div id="events-container"></div>

<script>
  async function loadEvents() {
    const container = document.getElementById("events-container");
    const loader = document.getElementById("loading-message");

    try {
      // Remplace par l'URL de ton Web App Apps Script
      const response = await fetch("https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec");
      const eventsData = await response.json();

      // Trouver la prochaine date uniquement
      const now = new Date();
      const futureEvents = eventsData.filter(ev => new Date(ev.start) >= now);
      if(futureEvents.length === 0) {
        container.innerHTML = "<p>Aucun √©v√©nement futur pour le moment.</p>";
        return;
      }

      // Trier par date et heure
      futureEvents.sort((a,b) => new Date(a.start) - new Date(b.start));

      // Prendre uniquement la prochaine date
      const nextDateKey = futureEvents[0].dateKey;
      const nextEvents = futureEvents.filter(ev => ev.dateKey === nextDateKey);

      // Construire le HTML
      const formattedDate = new Date(nextDateKey).toLocaleDateString('fr-FR', { weekday:'long', day:'2-digit', month:'long' });

      const html = `
        <div class="day-group">
          <h2 class="day-title">üìÖ ${formattedDate}</h2>
          <div class="grid">
            ${nextEvents.map(ev => {
              const time = new Date(ev.start).toLocaleTimeString('fr-FR', { hour:'2-digit', minute:'2-digit' });
              return `
                <div class="card">
                  <div class="event-time">üïí ${time}</div>
                  <h3>${ev.title}</h3>
                  ${ev.location ? `<div class="event-location">üìç ${ev.location}</div>` : ""}
                </div>
              `;
            }).join('')}
          </div>
        </div>
      `;

      container.innerHTML = html;
    } catch(err) {
      container.innerHTML = `<p style="color:red">Erreur lors du chargement des √©v√©nements</p>`;
      console.error(err);
    } finally {
      loader.style.display = "none";
    }
  }

  loadEvents();
</script>

</body>
</html>
